<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>swift on Quiet~仙哥的博客</title>
    <link>https://blog.ilifeapp.com/categories/swift/</link>
    <description>Recent content in swift on Quiet~仙哥的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 17 Aug 2020 21:27:10 +0800</lastBuildDate>
    
	<atom:link href="https://blog.ilifeapp.com/categories/swift/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Swift语言重点记录</title>
      <link>https://blog.ilifeapp.com/post/swift%E8%AF%AD%E8%A8%80%E9%87%8D%E7%82%B9%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Mon, 17 Aug 2020 21:27:10 +0800</pubDate>
      
      <guid>https://blog.ilifeapp.com/post/swift%E8%AF%AD%E8%A8%80%E9%87%8D%E7%82%B9%E8%AE%B0%E5%BD%95/</guid>
      <description>Structures Initializers enforce that all properties are set before you start using them. This is one of the key safety features of swift. A value type is a type whose instances are copied on assignment(copy on assignment). Key points Structures are named types you can define and use in your code. Structures are value types, which means their values are copied on assignment. You use dot syntax to access the members of named types such as sructures. Named types can have their own variables and functions, which are callled properties and methods. Confoming to a protocol requires implementing the properties and methods required by that protocol. Classes Structures vs. classes Structures Useful for representing values. Implicit copying of values. Becomes completely immutable when declared with let. Fast memory allocation(stack). Classes Useful for representing objects with an identity. Implicity sharing of</description>
    </item>
    
    <item>
      <title>Swift捕获列表浅析</title>
      <link>https://blog.ilifeapp.com/post/swift%E6%8D%95%E8%8E%B7%E5%88%97%E8%A1%A8%E6%B5%85%E6%9E%90/</link>
      <pubDate>Wed, 17 Jun 2020 14:55:33 +0800</pubDate>
      
      <guid>https://blog.ilifeapp.com/post/swift%E6%8D%95%E8%8E%B7%E5%88%97%E8%A1%A8%E6%B5%85%E6%9E%90/</guid>
      <description>Closures（闭包） 捕获列表（capture list）和闭包密不可分。 Closures capture values from the enclosing scope. 因为swift是一门安全的语言，闭包延长了它所使用的任何对象的生命周期，以此来保证这些对象是可用的和合法的。这个自动的安全性很好，但它也容易带来一些副作用，比如容易导致引用循环。最常见的场景就</description>
    </item>
    
  </channel>
</rss>